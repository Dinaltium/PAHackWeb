import L from "leaflet";

// Map building types to appropriate icons
const typeToIconMap: Record<string, { icon: string; color: string }> = {
  academic: { icon: "school", color: "#3B82F6" }, // blue
  administrative: { icon: "building", color: "#6366F1" }, // indigo
  residence: { icon: "home", color: "#EC4899" }, // pink
  dining: { icon: "utensils", color: "#F59E0B" }, // amber
  recreation: { icon: "dumbbell", color: "#10B981" }, // emerald
  library: { icon: "book", color: "#6D28D9" }, // purple
  facility: { icon: "landmark", color: "#64748B" }, // slate
  default: { icon: "map-marker", color: "#EF4444" }, // red
};

// This function creates basic Leaflet icons for simplicity (no TypeScript errors)
export function getIconForBuildingType(type?: string): L.Icon {
  const iconConfig = type && typeToIconMap[type] ? typeToIconMap[type] : typeToIconMap.default;
  
  return L.icon({
    iconUrl: "data:image/svg+xml;base64," + btoa(`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="36" height="36">
        <circle cx="12" cy="12" r="12" fill="${iconConfig.color}" />
        <text x="12" y="16" text-anchor="middle" fill="white" font-weight="bold" font-family="Arial" font-size="12">
          ${type?.charAt(0).toUpperCase() || "X"}
        </text>
      </svg>
    `),
    iconSize: [36, 36],
    iconAnchor: [18, 36],
    popupAnchor: [0, -36]
  });
}

// Get icon for the user's current location
export function getUserLocationIcon(): L.Icon {
  return L.icon({
    iconUrl: "data:image/svg+xml;base64," + btoa(`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
        <circle cx="12" cy="12" r="8" fill="#3B82F6" stroke="white" stroke-width="3" />
      </svg>
    `),
    iconSize: [24, 24],
    iconAnchor: [12, 12]
  });
}

// Helper function for highlighted/selected building
export function getHighlightedIcon(type?: string): L.Icon {
  const iconConfig = type && typeToIconMap[type] ? typeToIconMap[type] : typeToIconMap.default;
  
  return L.icon({
    iconUrl: "data:image/svg+xml;base64," + btoa(`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="42" height="42">
        <circle cx="12" cy="12" r="12" fill="${iconConfig.color}" stroke="white" stroke-width="2" />
        <text x="12" y="16" text-anchor="middle" fill="white" font-weight="bold" font-family="Arial" font-size="12">
          ${type?.charAt(0).toUpperCase() || "X"}
        </text>
      </svg>
    `),
    iconSize: [42, 42],
    iconAnchor: [21, 42],
    popupAnchor: [0, -42]
  });
}
